
/* 
  类(class):
    定义一类事物的抽象特点, 包含属性和方法

  对象(object):
    类的实例,通过new 类()生成

  面向对象OOP:
    三大特征: 封装, 继承, 多态

  封装:
    隐藏对数据操作细节, 只暴露对外的接口;
    外界只能通过调用对外提供的接口, 访问该对象的成员, 保证外界无法任意修改对象内部的数据
    1) 封装数据: 作为数据保存的容器
    2) 封装功能: 实现对数据的操作 (传入参数,经过运行后,返回结果)

  继承:
    子类继承父类, 子类可以拥有父类public/protected的属性和方法

  多态:
    子类继承父类时, 可以重写父类的方法, 所以不同子类继承的相同的方法,具备不同的功能

  存取器(setter & getter):
    用于设置和读取对象中的属性

  修饰符(modifiers):
    修饰符关键字, 用于限定成员可见的范围
    1) public  公开的属性或方法, 可以任意访问
    2) private 私有的属性或方法, 只能在当前类中被访问
    3) protected 受保护的属性或方法, 只能在当前类中和其子类中被访问,实例无法访问到

  抽象类:
    无法被实例化, 只能被继承, 在子类中实现其方法

  接口:
    通常是抽取多个类中共有的属性或方法;
    类可以实现implement接口, 继承该接口的方法或属性
    一个类只能继承自另一个类, 但是可实现多个接口

    

  

*/